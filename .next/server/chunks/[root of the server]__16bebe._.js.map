{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/zipbr/Desktop/afi/src/app/api/marcas/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport fs from \"fs\";\nimport path from \"path\";\n\nexport async function GET(req: Request) {\n  try {\n    // üîπ Obtener `idcategoria` desde los par√°metros de b√∫squeda\n    const { searchParams } = new URL(req.url);\n    const idcategoria = searchParams.get(\"idcategoria\");\n\n    if (!idcategoria) {\n      return NextResponse.json({ error: \"Debe proporcionar un ID de categor√≠a\" }, { status: 400 });\n    }\n\n    // üîπ Cargar el archivo marcas.json\n    const filePath = path.join(process.cwd(), \"src\", \"data\", \"marcas.json\");\n\n    // üî• Verificar que el archivo existe antes de leerlo\n    if (!fs.existsSync(filePath)) {\n      return NextResponse.json({ error: \"Archivo marcas.json no encontrado\" }, { status: 404 });\n    }\n\n    const jsonData = fs.readFileSync(filePath, \"utf-8\");\n    const marcas = JSON.parse(jsonData);\n\n    // üîπ Filtrar las marcas seg√∫n `idcategoria`\n    const marcasFiltradas = marcas.filter((marca: { idcategoria: string }) => marca.idcategoria.toString() === idcategoria);\n\n    return NextResponse.json(marcasFiltradas, { status: 200 });\n  } catch (error) {\n    console.error(\"‚ùå Error en la API de marcas:\", error);\n    return NextResponse.json({ error: \"Error interno del servidor\" }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,IAAI,GAAY;IACpC,IAAI;QACF,4DAA4D;QAC5D,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;QACxC,MAAM,cAAc,aAAa,GAAG,CAAC;QAErC,IAAI,CAAC,aAAa;YAChB,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAuC,GAAG;gBAAE,QAAQ;YAAI;QAC5F;QAEA,mCAAmC;QACnC,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,QAAQ;QAEzD,qDAAqD;QACrD,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,WAAW;YAC5B,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAoC,GAAG;gBAAE,QAAQ;YAAI;QACzF;QAEA,MAAM,WAAW,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QAC3C,MAAM,SAAS,KAAK,KAAK,CAAC;QAE1B,4CAA4C;QAC5C,MAAM,kBAAkB,OAAO,MAAM,CAAC,CAAC,QAAmC,MAAM,WAAW,CAAC,QAAQ,OAAO;QAE3G,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC,iBAAiB;YAAE,QAAQ;QAAI;IAC1D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA6B,GAAG;YAAE,QAAQ;QAAI;IAClF;AACF"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}